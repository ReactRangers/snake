{"version":3,"sources":["logo.svg","SnakeGame/cherries.svg","SnakeGame/Fruit.js","SnakeGame/Snake.js","SnakeGame/SnakeObject.js","SnakeGame/ruleset/fruitsAge.js","SnakeGame/ruleset/fruitsDrop.js","SnakeGame/ruleset/noCrossing.js","SnakeGame/ruleset/snakeEats.js","SnakeGame/ruleset/snakeGrows.js","SnakeGame/ruleset/snakeMoves.js","SnakeGame/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Fruit","_ref","x","y","r","react","height","width","xlinkHref","cherries","Snake","segments","map","_ref2","index","cx","cy","rest","Object","objectWithoutProperties","assign","objectSpread","style","fill","fillOpacity","length","count","SnakeObject","props","classCallCheck","this","_props$key","key","b","a","Math","sqrt","pow","constructor","direction","_ref7","distance","h","w","_vectorAdd","_ref3","slicedToArray","ax","ay","_ref4","vectorAdd","_ref5","mul","_ref6","vectorMultiply","rad","PI","sin","cos","vectorFromDegrees","_vectorAdd2","cloneWith","fruitsAge","fruits","time","delay","fruitExpirationDelay","filter","f","createdAt","fruitsDrop","lastFruitAt","newFruitProbability","newFruitDelay","newFruitSize","random","newFruit","concat","some","s","collidesWith","ruleset_noCrossing","running","slice","snakeEats","head","growth","remainingFruits","snakeGrows","lastGrowthAt","growthDelay","_segments$slice","tailEnd","cloneMovedBy","trailDirection","undefined","offset","snakeMoves","previousTrail","trail","deltaTime","snakeSpeed","_segments$0$cloneMove","toConsumableArray","reduce","segment","trailOffset","trailDistance","min","throttle","fn","timeout","wait","apply","arguments","setTimeout","SnakeGame","_this","possibleConstructorReturn","getPrototypeOf","call","_onKeyDown","keyCode","setState","state","scheduleNextTick","_this2","document","addEventListener","tick","noCrossing","ruleset","prevTime","values","rule","_requestId","requestAnimationFrame","cancelAnimationFrame","removeEventListener","_this$props","backgroundColor","_this$state","sec","toFixed","fontFamily","fruit","SnakeGame_Fruit","SnakeGame_Snake","React","defaultProps","App","react_default","createElement","className","src","logo","alt","SnakeGame_SnakeGame","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6f7085c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/cherries.6f7f637f.svg\";","import * as React from 'react';\n\nimport cherries from './cherries.svg';\n\nconst Fruit = ({ x, y, r }) => (\n  <image\n    x={x - r}\n    y={y - r}\n    height={r * 2}\n    width={r * 2}\n    xlinkHref={cherries}\n  />\n);\n\nexport default Fruit;\n","import * as React from 'react';\n\nconst Snake = ({ segments }) => segments.map(({ x: cx, y: cy, ...rest }, index) => (\n  <circle\n    {...{ cx, cy, ...rest }}\n    style={{\n      fill: 'navy',\n      fillOpacity: 1 - (index / segments.length),\n    }}\n   />\n));\n\nexport default Snake;\n","const vectorFromDegrees = (direction) => {\n  const rad = direction * Math.PI / 180;\n  return [Math.sin(rad), -Math.cos(rad)];\n}\n\nconst vectorAdd = ([ax, ay], [bx, by]) => [ax + bx, ay + by];\nconst vectorMultiply = ([dx, dy], mul) => [dx * mul, dy * mul];\n\nlet count = 0;\n\nexport default class SnakeObject {\n  constructor(props) {\n    const { key = count++ } = props;\n    Object.assign(this, props, { key });\n  }\n\n  collidesWith(b) {\n    const a = this;\n    return (a.r + b.r) > Math.sqrt(\n      Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2)\n    );\n  }\n\n  cloneWith(props) {\n    return new this.constructor({ ...this, ...props });\n  }\n\n  cloneMovedBy({\n    direction,\n    distance,\n    height: h,\n    width: w,\n  }, props) {\n    const [x, y] = vectorAdd(\n      [this.x, this.y],\n      vectorMultiply(vectorFromDegrees(direction), distance),\n    );\n    return this.cloneWith({\n      x: ((x % w) + w) % w,\n      y: ((y % h) + h) % h,\n      ...props,\n    });\n  }\n}\n","export default ({\n  fruits,\n  time,\n}, {\n  fruitExpirationDelay: delay,\n}) => ({\n  fruits: fruits.filter(f => time - f.createdAt <= delay),\n});\n","import SnakeObject from '../SnakeObject';\n\nexport default ({\n  fruits,\n  segments,\n  time,\n  lastFruitAt,\n}, {\n  width,\n  height,\n  newFruitProbability,\n  newFruitDelay,\n  newFruitSize,\n}) => {\n  if (time < lastFruitAt + newFruitDelay || Math.random() > newFruitProbability) {\n    return null;\n  }\n  if (Math.random() > newFruitProbability) {\n    return {\n      lastFruitAt: time,\n    };\n  }\n  const newFruit = new SnakeObject({\n    x: Math.random() * width,\n    y: Math.random() * height,\n    r: newFruitSize / 2,\n    createdAt: time,\n  });\n  const gameObjects = fruits.concat(segments);\n  if (gameObjects.some(s => s.collidesWith(newFruit))) {\n    return null;\n  }\n  return {\n    fruits: fruits.concat(newFruit),\n    lastFruitAt: time,\n  };\n}\n","export default ({ segments }) => ({\n  running: !segments.slice(2).some(s => s.collidesWith(segments[0])),\n});\n","export default ({\n  segments: [head],\n  fruits,\n  growth,\n}) => {\n  const remainingFruits = fruits\n    .filter(f => !f.collidesWith(head));\n  return {\n    fruits: remainingFruits,\n    growth: growth + fruits.length - remainingFruits.length,\n  };\n};\n","export default ({\n  segments,\n  time,\n  growth,\n  lastGrowthAt,\n}, {\n  width,\n  height,\n  growthDelay,\n}) => {\n  if (growth === 0 || time < lastGrowthAt + growthDelay) {\n    return null;\n  }\n  const [tailEnd] = segments.slice(-1);\n  const distance = tailEnd.r * 2;\n  return {\n    segments: segments.concat(\n      tailEnd.cloneMovedBy({\n        direction: tailEnd.trailDirection,\n        distance,\n        width,\n        height,\n      }, {\n        key: undefined,\n        offset: tailEnd.offset + distance,\n      }),\n    ),\n    growth: growth - 1,\n    lastGrowthAt: time,\n  };\n}\n","export default ({\n  segments,\n  direction,\n  trail: previousTrail,\n  time,\n  deltaTime,\n}, {\n  width,\n  height,\n  snakeSpeed,\n}) => {\n  const distance = deltaTime * snakeSpeed;\n  const { x, y } = segments[0].cloneMovedBy({\n    direction,\n    distance,\n    width,\n    height,\n  });\n  const trail = [{\n    direction: direction + 180,\n    distance,\n  }, ...previousTrail];\n  return {\n    trail,\n    segments: segments.map(s => trail.reduce(({\n      segment,\n      trailOffset,\n    }, {\n      direction: trailDirection,\n      distance: trailDistance,\n    }) => ({\n      segment,\n      trailOffset: trailOffset + trailDistance,\n      ...(segment.offset > trailOffset && {\n        segment: segment.cloneMovedBy({\n          direction: trailDirection,\n          distance: Math.min(\n            segment.offset - trailOffset,\n            trailDistance,\n          ),\n          width,\n          height,\n        }, { trailDirection }),\n      }),\n    }), {\n      segment: s.cloneWith({ x, y }),\n      trailOffset: 0,\n    }).segment),\n  };\n}\n","import * as React from 'react';\n\nimport Fruit from './Fruit';\nimport Snake from './Snake';\nimport SnakeObject from './SnakeObject';\nimport * as ruleset from './ruleset/';\n\nconst throttle = (fn, timeout) => {\n  let wait = false;\n  return (...args) => {\n    if (!wait) {\n      fn(...args);\n      wait = true;\n      setTimeout(() => wait = false, timeout);\n    }\n  }\n}\n\nexport default class SnakeGame extends React.Component {\n  static defaultProps = {\n    width: 640,\n    height: 480,\n    backgroundColor: 'white',\n    newFruitDelay: 200,\n    newFruitProbability: 0.35,\n    newFruitSize: 40,\n    fruitExpirationDelay: 10 * 1000,\n    snakeSpeed: 0.1,\n    growthDelay: 150,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const direction = 90;\n    this.state = {\n      segments: [\n        new SnakeObject({\n          x: this.props.width / 2,\n          y: this.props.height / 2,\n          r: 10,\n          offset: 0,\n          trailDirection: direction + 180,\n        }),\n      ],\n      direction,\n      fruits: [],\n      trail: [],\n      running: true,\n      time: 0,\n      deltaTime: 0,\n      growth: 8,\n      lastGrowthAt: 0,\n      lastFruitAt: 0,\n    };\n    this._onKeyDown = throttle(this._onKeyDown, 100);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this._onKeyDown);\n\n    let scheduleNextTick;\n    const tick = (time) => {\n      const { noCrossing, ...rest } = ruleset;\n      this.setState(\n        (state, props) => [\n          ({ time: prevTime }) => ({\n            time,\n            deltaTime: time - prevTime,\n          }),\n          noCrossing,\n          ...Object.values(rest),\n        ].reduce(\n          (s, rule) => ({\n            ...s,\n            ...(state.running && rule(s, props)),\n          }),\n          state,\n        ),\n        scheduleNextTick,\n      );\n    };\n    scheduleNextTick = () => {\n      this._requestId = requestAnimationFrame(tick);\n    };\n    scheduleNextTick();\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this._requestId);\n    document.removeEventListener('keydown', this._onKeyDown);\n  }\n\n  _onKeyDown = ({ keyCode }) => this.setState(({ direction }) => {\n    switch (keyCode) {\n      case 37: /* left */\n        return {\n          direction: direction - 21,\n        };\n\n      case 39: /* right */\n        return {\n          direction: direction + 21,\n        };\n\n      default:\n        return null;\n    }\n  });\n\n  render() {\n    const {\n      props: { width, height, backgroundColor },\n      state: { fruits, segments, time },\n    } = this;\n    const sec = (time / 1000).toFixed(2);\n    return (\n      <svg style={{ width, height, backgroundColor }}>\n        <text style={{ fontFamily: 'monospace' }} y={20}>\n          Score: {sec} s and {segments.length} segments\n        </text>\n        {fruits.map(fruit => <Fruit {...fruit} />)}\n        <Snake {...{ segments }} />\n      </svg>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport SnakeGame from './SnakeGame/';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <SnakeGame />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}